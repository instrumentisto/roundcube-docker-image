# AUTOMATICALLY GENERATED
# DO NOT EDIT THIS FILE DIRECTLY, USE /Dockerfile.tmpl.php

# https://hub.docker.com/_/php
FROM php:7.3-fpm-alpine

ARG roundcube_ver=1.4.2

# Install s6-overlay
RUN curl -fL -o /tmp/s6-overlay.tar.gz \
         https://github.com/just-containers/s6-overlay/releases/download/v1.22.1.0/s6-overlay-amd64.tar.gz \
 && tar -xzf /tmp/s6-overlay.tar.gz -C / \
 && rm -rf /tmp/*

ENV S6_KEEP_ENV=1 \
    S6_CMD_WAIT_FOR_SERVICES=1


# Install required libraries and PHP extensions
RUN apk update \
 && apk upgrade \
 && update-ca-certificates \
 && apk add --no-cache --virtual .plugin-deps \
        gnupg \
 && apk add --no-cache --virtual .php-ext-deps \
        libpq unixodbc freetds \
        aspell-libs \
        icu-libs \
        libldap \
        libjpeg-turbo libpng freetype \
        libzip \
        zlib \
    \
 && apk add --no-cache --virtual .build-deps \
        postgresql-dev unixodbc-dev freetds-dev \
        aspell-dev \
        icu-dev \
        openldap-dev \
        libjpeg-turbo-dev libpng-dev freetype-dev \
        libzip-dev \
        zlib-dev \
    \
 && docker-php-ext-configure gd --with-jpeg-dir=/usr/include/ \
                                --with-png-dir=/usr/include/ \
                                --with-freetype-dir=/usr/include/ \
 && docker-php-ext-configure pdo_odbc --with-pdo-odbc=unixODBC,/usr \
 && docker-php-ext-install \
           exif \
           gd \
           intl \
           ldap \
           opcache \
           pdo_mysql pdo_pgsql pdo_odbc pdo_dblib \
           pspell \
           sockets \
           zip \
    \
 # Cleanup stuff
 && apk del .build-deps \
 && rm -rf /var/cache/apk/*


# Install Roundcube
RUN curl -fL -o /tmp/roundcube.tar.gz \
         https://github.com/roundcube/roundcubemail/releases/download/${roundcube_ver}/roundcubemail-${roundcube_ver}.tar.gz \
 && tar -xzf /tmp/roundcube.tar.gz -C /tmp/ \
 && rm -rf /app \
 && mv /tmp/roundcubemail-${roundcube_ver} /app \
    \
 # Install Composer to resolve Roundcube dependencies
 && curl -fL -o /tmp/composer-setup.php \
          https://getcomposer.org/installer \
 && curl -fL -o /tmp/composer-setup.sig \
          https://composer.github.io/installer.sig \
 && php -r "if (hash('SHA384', file_get_contents('/tmp/composer-setup.php')) !== trim(file_get_contents('/tmp/composer-setup.sig'))) { echo 'Invalid installer' . PHP_EOL; exit(1); }" \
 && php /tmp/composer-setup.php --install-dir=/tmp --filename=composer \
    \
 # Install tools for building
 && apk add --update --no-cache --virtual .tool-deps \
        git \
        file \
    \
 # Resolve Roudcube Composer dependencies
 && mv /app/composer.json-dist /app/composer.json \
 && cd /app/ \
 && (/tmp/composer suggests | xargs -i /tmp/composer require {}) \
 && /tmp/composer install --no-dev --optimize-autoloader --no-progress \
    \
 # Resolve Roudcube JS dependencies
 && /app/bin/install-jsdeps.sh \
    \
 # Make default Roudcube configuration log to syslog
 && sed -i -r 's/^([^\s]{9}log_driver[^\s]{2} =) [^\s]+$/\1 "syslog";/g' \
        /app/config/defaults.inc.php \
    \
 # Setup serve directories
 && cd /app/ \
 && ln -sn ./public_html /app/html \
 && rm -rf /var/www \
 && ln -s /app /var/www \
    \
 # Set correct owner
 && chown -R www-data:www-data /app /var/www \
    \
 # Cleanup stuff
 && (find /app/ -name .travis.yml -type f -prune | \
        while read d; do rm -rf $d; done) \
 && (find /app/ -name .gitignore -type f -prune | \
        while read d; do rm -rf $d; done) \
 && (find /app/ -name .git -type d -prune | \
        while read d; do rm -rf $d; done) \
 && apk del .tool-deps \
 && rm -rf /var/cache/apk/* \
           /app/temp/* \
           /root/.composer \
           /tmp/*


# Install configurations
COPY rootfs /

# Fix executable rights
RUN chmod +x /etc/services.d/*/run \
             /docker-entrypoint.sh \
    \
 # Prepare directory for SQLite database
 && mkdir -p /var/db \
 && chown -R www-data:www-data /var/db

ENV PHP_OPCACHE_REVALIDATION=0 \
    SHARE_APP=0


WORKDIR /var/www

ENTRYPOINT ["/init", "/docker-entrypoint.sh"]

CMD ["php-fpm"]
