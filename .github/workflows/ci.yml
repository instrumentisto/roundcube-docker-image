name: CI

on:
  pull_request:
  push:
  schedule:
    - cron: '0 13 * * 4'

jobs:
  docker:
    strategy:
      matrix:
        include:
          - dockerfile: 1.5/apache
            publish: ${{ github.event_name == 'push'
                         && startsWith(github.ref, 'refs/tags/1.5.') }}
          - dockerfile: 1.5/fpm
            publish: ${{ github.event_name == 'push'
                         && startsWith(github.ref, 'refs/tags/1.5.') }}
          - dockerfile: 1.4/apache
            publish: ${{ github.event_name == 'push'
                         && startsWith(github.ref, 'refs/tags/1.4.') }}
          - dockerfile: 1.4/fpm
            publish: ${{ github.event_name == 'push'
                         && startsWith(github.ref, 'refs/tags/1.4.') }}
          - dockerfile: 1.3/apache
            publish: ${{ github.event_name == 'push'
                         && startsWith(github.ref, 'refs/tags/1.3.') }}
          - dockerfile: 1.3/fpm
            publish: ${{ github.event_name == 'push'
                         && startsWith(github.ref, 'refs/tags/1.3.') }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Verify Dockerfile is up-to-date
        run: |
          make codegen.dockerfile dir=${{ matrix.dockerfile }}

          git update-index --refresh
          ! git diff-index HEAD -- | grep '${{ matrix.dockerfile }}'

      - uses: docker/setup-buildx-action@v1

      - uses: satackey/action-docker-layer-caching@v0.0.11
        continue-on-error: true
        if: ${{ !matrix.publish && github.ref != 'refs/heads/master' }}
      - run: make docker.image no-cache=no tag=build-${{ github.run_number }}
                               DOCKERFILE=${{ matrix.dockerfile }}
        if: ${{ !matrix.publish && github.ref != 'refs/heads/master' }}

      - run: make docker.image no-cache=yes tag=build-${{ github.run_number }}
                               DOCKERFILE=${{ matrix.dockerfile }}
        if: ${{ matrix.publish || github.ref == 'refs/heads/master' }}

      - run: make npm.install
      - run: make test.docker tag=build-${{ github.run_number }}
                              DOCKERFILE=${{ matrix.dockerfile }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
        if: ${{ matrix.publish }}
      - name: Login to Quay.io
        uses: docker/login-action@v1
        with:
          registry: quay.io
          username: instrumentisto+bot
          password: ${{ secrets.QUAYIO_ROBOT_TOKEN }}
        if: ${{ matrix.publish }}
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: instrumentistobot
          password: ${{ secrets.DOCKERHUB_BOT_PASS }}
        if: ${{ matrix.publish }}

      - run: make docker.tags of=build-${{ github.run_number }}
                              DOCKERFILE=${{ matrix.dockerfile }}
        if: ${{ matrix.publish }}
      - run: make docker.push DOCKERFILE=${{ matrix.dockerfile }}
        if: ${{ matrix.publish }}

  release:
    needs: ['docker']
    if: ${{ github.event_name == 'push'
            && startsWith(github.ref, 'refs/tags/1.') }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      # On GitHub Container Registry README is automatically updated on pushes.
      - name: Update README on Quay.io
        uses: christian-korneck/update-container-description-action@v1
        env:
          DOCKER_APIKEY: ${{ secrets.QUAYIO_API_TOKEN }}
        with:
          provider: quay
          destination_container_repo: quay.io/instrumentisto/roundcube
          readme_file: README.md
      - name: Update README on Docker Hub
        uses: christian-korneck/update-container-description-action@v1
        env:
          DOCKER_USER: instrumentistobot
          DOCKER_PASS: ${{ secrets.DOCKERHUB_BOT_PASS }}
        with:
          provider: dockerhub
          destination_container_repo: instrumentisto/roundcube
          readme_file: README.md

      - name: Parse release version from Git tag
        id: release
        run: echo ::set-output name=VERSION::${GITHUB_REF#refs/tags/}
      - name: Parse CHANGELOG link
        id: changelog
        run: echo ::set-output name=LINK::https://github.com/${{ github.repository }}/blob/${{ steps.release.outputs.VERSION }}/CHANGELOG.md#$(sed -n '/^## \[${{ steps.release.outputs.VERSION }}\]/{s/^## \[\(.*\)\][^0-9]*\([0-9].*\)/\1--\2/;s/[^0-9a-z-]*//g;p;}' CHANGELOG.md)

      - name: Release on GitHub
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.release.outputs.VERSION }}
          release_name: ${{ steps.release.outputs.VERSION }}
          body: |
            [Changelog](${{ steps.changelog.outputs.LINK }})
